// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE")
}

// CONFIGURACION DE EMPRESA

model Empresa {
  id                           Int                            @id @default(autoincrement())
  codigo                       String?                        @unique
  nombre                       String
  ruc                          String                         @unique
  direccion                    String
  telefono                     String
  email                        String?
  web                          String?
  logo                         String?
  sucursales                   Sucursal[]
  paises                       Pais[]
  parametrosGlobales           ParametroGlobal[]
  personal                     Personal[]
  vendedores                   Vendedor[]
  clientes                     Cliente[]
  costos                       Costo[]
  banco                        Banco[]
  cuentasBancarias             CuentaBancaria[]
  tipoCliente                  TipoCliente[]
  agenteAduanas                AgenteAduanas[]
  incoterms                    Incoterms[]
  tipoVia                      TipoVia[]
  gastoImportacion             GastoImportacion[]
  factorInternamiento          FactorInternamiento[]
  almacen                      Almacen[]
  motivoMovimientoAlmacen      MotivoMovimientoAlmacen[]
  agenciaTransporte            AgenciaTransporte[]
  vehiculo                     Vehiculo[]
  chofer                       Chofer[]
  tipoDeCambio                 TipoDeCambio[]
  parametroDescuento           ParametroDescuento[]
  formaDePagoContado           FormaDePagoContado[]
  formaDePagoCredito           FormaDePagoCredito[]
  documentoContable            DocumentoContable[]
  documentoAdministrativo      DocumentoAdministrativo[]
  detraccion                   Detraccion[]
  motivoTrasladoGuiaRemision   MotivoTrasladoGuiaRemision[]
  familia                      Familia[]
  servicio                     Servicio[]
  trabajoTerceros              TrabajoTerceros[]
  caracteristica               Caracteristica[]
  modeloMaquina                ModeloMaquina[]
  fabricaMaquina               FabricaMaquina[]
  nombreMaquina                NombreMaquina[]
  marcaMotor                   MarcaMotor[]
  marcaFabricaSistemaInyeccion MarcaFabricaSistemaInyeccion[]
  descripcionBombaInyeccion    DescripcionBombaInyeccion[]
  marcaFabricaInyector         MarcaFabricaInyector[]
  descripcionInyector          DescripcionInyector[]
  maquina                      Maquina[]
  material                     Material[]
  FamiliaPresupuesto           FamiliaPresupuesto[]
  MaterialPresupuesto          MaterialPresupuesto[]
  Cotizacion                   Cotizacion[]
  AprovacionCotizacion         AprovacionCotizacion[]
  AprovacionPedido             AprovacionPedido[]
  GuiaDeRemision               GuiaDeRemision[]
  Factura                      Factura[]
  reportesVentas               ReporteVentas[]
  reportesRecordClientes       ReporteRecordClientes[]
  reportesRecordProveedores    ReporteRecordProveedores[]
  reportesStockMinimo          ReporteStockMinimo[]
  reportesMensualesVentas      ReporteMensualVentas[]
  hojaRecepcion                HojaRecepcion[]
  presupuesto                  Presupuesto[]
  ordenTrabajo                 OrdenTrabajo[]
  guiaRemisionServicios        GuiaRemisionServicios[]
  facturaServicios             FacturaServicios[]

  @@map("empresa")
}

model Sucursal {
  id        Int      @id @default(autoincrement())
  codigo    String?  @unique
  nombre    String
  direccion String?
  telefono  String?
  email     String?
  empresa   Empresa? @relation(fields: [empresaId], references: [id])
  empresaId Int?
  cotizacion   Cotizacion[]
  cotizacionAprov AprovacionCotizacion[]
  pedidoAprov     AprovacionPedido[]
  guiaRemisionMostrador GuiaDeRemision[]
  facturasMostrador Factura[]
  hojaRecepcion   HojaRecepcion[]
  presupuesto     Presupuesto[]
  ordenTrabajo    OrdenTrabajo[]
  guiaRemisionServicios GuiaRemisionServicios[]
  facturaServicios      FacturaServicios[]

  @@map("sucursal")
}

// MANTENIMIENTO
// AREA GENERAL

model Pais {
  id                       Int       @id @default(autoincrement())
  codigo                   String
  nombre                   String
  empresa                  Empresa?  @relation(fields: [empresaId], references: [id])
  empresaId                Int?
  maquinas                 Maquina[] @relation(name: "maquina")
  maquinasBombaInyecciones Maquina[] @relation(name: "bombaInyeccionPais")
  maquinasInyectores       Maquina[] @relation(name: "inyectorPais")
  maquinasMotores          Maquina[] @relation(name: "motorPais")
  hojaRecepcion HojaRecepcion[]
  presupuestos  Presupuesto[]

  @@unique([codigo, empresaId])
  @@map("pais")
}

model ParametroGlobal {
  id        Int      @id @default(autoincrement())
  nombre    String   @unique
  valor     String
  empresa   Empresa? @relation(fields: [empresaId], references: [id])
  empresaId Int?

  @@unique([nombre, empresaId])
  @@map("parametro_global")
}

// AREA DE IMPORTACION

model AgenteAduanas {
  id            Int      @id @default(autoincrement())
  codigo        String?  @unique
  nombre        String
  email         String
  telefono      String
  observaciones String?
  empresa       Empresa? @relation(fields: [empresaId], references: [id])
  empresaId     Int?

  @@map("agente_aduanas")
}

model Incoterms {
  id          Int      @id @default(autoincrement())
  codigo      String?  @unique
  nombre      String
  descripcion String?
  empresa     Empresa? @relation(fields: [empresaId], references: [id])
  empresaId   Int?

  @@map("incoterms")
}

model TipoVia {
  id          Int      @id @default(autoincrement())
  codigo      String?  @unique
  nombre      String
  descripcion String?
  empresa     Empresa? @relation(fields: [empresaId], references: [id])
  empresaId   Int?

  @@map("tipo_via")
}

model GastoImportacion {
  id            Int      @id @default(autoincrement())
  codigo        String?  @unique
  nombre        String
  descripcion   String?
  observaciones String?
  empresa       Empresa? @relation(fields: [empresaId], references: [id])
  empresaId     Int?

  @@map("gasto_importacion")
}

model FactorInternamiento {
  id        Int      @id @default(autoincrement())
  codigo    String?  @unique
  valor     Decimal  @default(0) @db.Decimal(12, 2)
  fecha     DateTime
  empresa   Empresa? @relation(fields: [empresaId], references: [id])
  empresaId Int?

  @@map("factor_internamiento")
}

// AREA ADMINISTRATIVA
model Personal {
  id                Int              @id @default(autoincrement())
  codigo            String?          @unique
  nombre            String
  email             String           @unique
  password          String
  passwordEncrypted String?
  telefono          String
  puesto            String?
  estado            EstadoEnum       @default(Activo)
  direccion         String
  role              Role[]
  empresa           Empresa[]
  Cotizacion        Cotizacion[]
  GuiaDeRemision    GuiaDeRemision[]
  Factura           Factura[]
  hojaRecepcion     HojaRecepcion[]
  presupuestos      Presupuesto[]
  guiaRemisionServicios GuiaRemisionServicios[]
  facturaServicios  FacturaServicios[]

  @@map("personal")
}

model Vendedor {
  id                   Int              @id @default(autoincrement())
  codigo               String?          @unique
  nombre               String
  email                String           @unique
  password             String
  telefono             String
  direccion            String
  comision             Decimal          @default(0) @db.Decimal(12, 2)
  aprovacionCotizacion Boolean
  estado               EstadoEnum       @default(Activo)
  empresa              Empresa?         @relation(fields: [empresaId], references: [id])
  empresaId            Int?
  role                 Role[]
  Cotizacion           Cotizacion[]
  GuiaDeRemision       GuiaDeRemision[]
  Factura              Factura[]
  hojaRecepcion        HojaRecepcion[]
  presupuestos         Presupuesto[]
  guiaRemisionServicios GuiaRemisionServicios[]
  facturaServicios  FacturaServicios[]

  @@map("vendedor")
}

model Cliente {
  id              Int               @id @default(autoincrement())
  codigo          String?           @unique
  tipoDocumento   TipoDocumentoEnum @map("tipo_documento")
  numeroDocumento String            @map("numero_documento")
  nombre          String
  email           String
  telefono        String
  estado          EstadoEnum        @default(Activo)
  tipoCliente     TipoCliente?      @relation(fields: [tipoClienteId], references: [id])
  tipoClienteId   Int?
  empresa         Empresa?          @relation(fields: [empresaId], references: [id])
  empresaId       Int?
  Cotizacion      Cotizacion[]
  cotizacionesAprov AprovacionCotizacion[]
  pedidosAprov    AprovacionPedido[]
  GuiaDeRemision  GuiaDeRemision[]
  Factura         Factura[]
  hojasRecepcion  HojaRecepcion[]
  presupuestos    Presupuesto[]
  ordenesTrabajo  OrdenTrabajo[]
  guiaRemisionServicios GuiaRemisionServicios[]
  facturaServicios  FacturaServicios[]

  @@map("cliente")
}

model Costo {
  id          Int        @id @default(autoincrement())
  codigo      String?    @unique
  nombre      String
  responsable String
  estado      EstadoEnum @default(Activo)
  empresa     Empresa?   @relation(fields: [empresaId], references: [id])
  empresaId   Int?

  @@map("costo")
}

model Banco {
  id               Int              @id @default(autoincrement())
  codigo           String?          @unique
  nombre           String
  cuentasBancarias CuentaBancaria[]
  empresa          Empresa?         @relation(fields: [empresaId], references: [id])
  empresaId        Int?

  @@map("banco")
}

model CuentaBancaria {
  id           Int        @id @default(autoincrement())
  codigo       String?    @unique
  numeroCuenta String     @map("numero_cuenta")
  tipoCuenta   String     @map("tipo_cuenta")
  moneda       String
  estado       EstadoEnum @default(Activo)
  banco        Banco?     @relation(fields: [bancoId], references: [id])
  bancoId      Int?
  empresa      Empresa?   @relation(fields: [empresaId], references: [id])
  empresaId    Int?

  @@map("cuenta_bancaria")
}

model TipoCliente {
  id        Int        @id @default(autoincrement())
  codigo    String?    @unique
  clientes  Cliente[]
  tipo      String     @unique
  estado    EstadoEnum @default(Activo)
  empresa   Empresa?   @relation(fields: [empresaId], references: [id])
  empresaId Int?

  @@map("tipo_cliente")
}

model Role {
  id       Int        @id @default(autoincrement())
  name     RolesEnum  @unique
  personal Personal[]
  vendor   Vendedor[]

  @@map("role")
}

model Almacen {
  id        Int      @id @default(autoincrement())
  codigo    String?  @unique
  nombre    String
  direccion String
  telefono  String
  empresa   Empresa? @relation(fields: [empresaId], references: [id])
  empresaId Int?

  @@map("almacen")
}

model MotivoMovimientoAlmacen {
  id        Int      @id @default(autoincrement())
  codigo    String?  @unique
  nombre    String
  empresa   Empresa? @relation(fields: [empresaId], references: [id])
  empresaId Int?

  @@map("motivo_movimiento_almacen")
}

model AgenciaTransporte {
  id              Int               @id @default(autoincrement())
  codigo          String?           @unique
  nombre          String
  tipoDocumento   TipoDocumentoEnum @map("tipo_documento")
  numeroDocumento String            @map("numero_documento")
  direccion       String
  telefono        String
  email           String
  empresa         Empresa?          @relation(fields: [empresaId], references: [id])
  empresaId       Int
  GuiaDeRemision  GuiaDeRemision[]
  guiaRemisionServicios GuiaRemisionServicios[]

  @@map("agencia_transporte")
}

model Vehiculo {
  id               Int              @id @default(autoincrement())
  codigo           String?          @unique
  placa            String
  marca            String
  modelo           String
  tipo             String?
  descripcion      String?
  color            String
  tarjetaPropiedad String           @map("tarjeta_propiedad")
  empresa          Empresa?         @relation(fields: [empresaId], references: [id])
  empresaId        Int
  GuiaDeRemision   GuiaDeRemision[]
  guiaRemisionServicios GuiaRemisionServicios[]

  @@map("vehiculo")
}

model Chofer {
  id                 Int              @id @default(autoincrement())
  codigo             String?          @unique
  nombre             String
  dni                String
  licencia           String
  fechaVencimiento   DateTime
  tarjetaDePropiedad String           @map("tarjeta_de_propiedad")
  email              String
  telefono           String
  empresa            Empresa?         @relation(fields: [empresaId], references: [id])
  empresaId          Int
  GuiaDeRemision     GuiaDeRemision[]
  guiaRemisionServicios GuiaRemisionServicios[]

  @@map("chofer")
}

model TipoDeCambio {
  id             Int              @id @default(autoincrement())
  codigo         String?          @unique
  de             String
  a              String
  valor          Decimal          @default(0) @db.Decimal(12, 2)
  fecha          DateTime
  empresa        Empresa?         @relation(fields: [empresaId], references: [id])
  empresaId      Int
  Cotizacion     Cotizacion[]
  // GuiaDeRemision GuiaDeRemision[]
  Factura        Factura[]
  guiaRemisionServicios GuiaRemisionServicios[]
  facturaServicios  FacturaServicios[]

  @@map("tipo_de_cambio")
}

model ParametroDescuento {
  id        Int      @id @default(autoincrement())
  de        Decimal  @default(0) @db.Decimal(12, 2)
  a         Decimal  @default(0) @db.Decimal(12, 2)
  empresa   Empresa? @relation(fields: [empresaId], references: [id])
  empresaId Int

  @@map("parametro_descuento")
}

model FormaDePagoContado {
  id             Int              @id @default(autoincrement())
  codigo         String?          @unique
  nombre         String
  empresa        Empresa?         @relation(fields: [empresaId], references: [id])
  empresaId      Int
  Cotizacion     Cotizacion[]
  // GuiaDeRemision GuiaDeRemision[]
  Factura        Factura[]
  guiaRemisionServicios GuiaRemisionServicios[]
  facturaServicios  FacturaServicios[]

  @@map("forma_de_pago_contado")
}

model FormaDePagoCredito {
  id             Int              @id @default(autoincrement())
  codigo         String?          @unique
  nombre         String
  numeroDeDias   Int              @map("numero_de_dias")
  empresa        Empresa?         @relation(fields: [empresaId], references: [id])
  empresaId      Int
  Cotizacion     Cotizacion[]
  // GuiaDeRemision GuiaDeRemision[]
  Factura        Factura[]
  guiaRemisionServicios GuiaRemisionServicios[]
  facturaServicios  FacturaServicios[]

  @@map("forma_de_pago_credito")
}

model DocumentoContable {
  id            Int      @id @default(autoincrement())
  codigo        String   @unique
  numeroDeSerie String   @map("numero_de_serie")
  nombre        String
  abreviatura   String
  empresa       Empresa? @relation(fields: [empresaId], references: [id])
  empresaId     Int
  facturasMostrador   Factura[]
  facturasServicios   FacturaServicios[]

  @@map("documento_contable")
}

model DocumentoAdministrativo {
  id          Int      @id @default(autoincrement())
  codigo      String   @unique
  nombre      String
  abreviatura String
  empresa     Empresa? @relation(fields: [empresaId], references: [id])
  empresaId   Int

  @@map("documento_administrativo")
}

model Detraccion {
  id         Int       @id @default(autoincrement())
  codigo     String    @unique
  definicion String
  porcentaje Decimal   @default(0) @db.Decimal(12, 2)
  empresa    Empresa?  @relation(fields: [empresaId], references: [id])
  empresaId  Int
  Factura    Factura[]
  facturaServiciosMateriales  FacturaServicios[] @relation(name: "detraccionMaterial")
  facturaServicios  FacturaServicios[] @relation(name: "detraccionServicio")

  @@map("detraccion")
}

model MotivoTrasladoGuiaRemision {
  id          Int      @id @default(autoincrement())
  codigo      String?  @unique
  motivo      String
  descripcion String?
  empresa     Empresa? @relation(fields: [empresaId], references: [id])
  empresaId   Int
  guiasRemision GuiaDeRemision[]

  @@map("motivo_traslado_guia_remision")
}

model FamiliaPresupuesto {
  id                     Int                     @id @default(autoincrement())
  codigo                 String?                 @unique
  descripcion            String
  empresa                Empresa?                @relation(fields: [empresaId], references: [id])
  materialPresupuestos   MaterialPresupuesto[]
  empresaId              Int
  subFamiliaPresupuestos SubFamiliaPresupuesto[]

  @@map("familia_presupuesto")
}

model SubFamiliaPresupuesto {
  id                   Int                   @id @default(autoincrement())
  codigo               String?               @unique
  descripcion          String
  familia              FamiliaPresupuesto?   @relation(fields: [familiaId], references: [id])
  familiaId            Int
  materialPresupuestos MaterialPresupuesto[]

  @@map("sub_familia_presupuesto")
}

model MaterialPresupuesto {
  id           Int                    @id @default(autoincrement())
  codigo       String?                @unique
  familia      FamiliaPresupuesto?    @relation(fields: [familiaId], references: [id])
  familiaId    Int
  subFamilia   SubFamiliaPresupuesto? @relation(fields: [subFamiliaId], references: [id])
  subFamiliaId Int
  correlativo  String?
  nombre       String
  precio       Decimal                @default(0) @db.Decimal(12, 2)
  empresa      Empresa?               @relation(fields: [empresaId], references: [id])
  empresaId    Int

  @@map("material_presupuesto")
}

model Servicio {
  id         Int      @id @default(autoincrement())
  codigo     String   @unique
  definicion String
  precio     Decimal  @default(0) @db.Decimal(12, 2)
  empresa    Empresa? @relation(fields: [empresaId], references: [id])
  empresaId  Int
  hojasRecepcion  HojaRecepcionToServicio[]
  presupuestos    PresupuestoToServicio[]
  ordenesTrabajo  OrdenTrabajoToServicio[]
  facturaServicio FacturaServicioToServicio[]

  @@map("servicio")
}

model TrabajoTerceros {
  id         Int      @id @default(autoincrement())
  codigo     String   @unique
  definicion String
  precio     Decimal  @default(0) @db.Decimal(12, 2)
  empresa    Empresa? @relation(fields: [empresaId], references: [id])
  empresaId  Int
  presupuestos  PresupuestoToTrabajoTerceros[]
  ordenesTrabajo  OrdenTrabajoToTrabajoTerceros[]

  @@map("trabajo_terceros")
}

// MAESTRO DE CODIGOS
model Familia {
  id          Int          @id @default(autoincrement())
  codigo      String       
  descripcion String
  empresa     Empresa?     @relation(fields: [empresaId], references: [id])
  empresaId   Int
  SubFamilia  SubFamilia[]
  Material    Material[]

  @@map("familia")
}

model SubFamilia {
  id          Int        @id @default(autoincrement())
  codigo      String     
  descripcion String
  familia     Familia?   @relation(fields: [familiaId], references: [id])
  familiaId   Int
  Material    Material[]

  @@map("sub_familia")
}

model Caracteristica {
  id                       Int                        @id @default(autoincrement())
  codigo                   String                     @unique
  descripcion              String
  abreviatura              String
  empresa                  Empresa?                   @relation(fields: [empresaId], references: [id])
  empresaId                Int
  caracteristicaToMaterial CaracteristicaToMaterial[]

  @@map("caracteristica")
}

model ModeloMaquina {
  id        Int       @id @default(autoincrement())
  codigo    String    @unique
  modelo    String
  empresa   Empresa?  @relation(fields: [empresaId], references: [id])
  empresaId Int
  Maquina   Maquina[]
  hojaRecepcion HojaRecepcion[]
  presupuestos  Presupuesto[]

  @@map("modelo_maquina")
}

model FabricaMaquina {
  id        Int       @id @default(autoincrement())
  codigo    String    @unique
  fabrica   String
  empresa   Empresa?  @relation(fields: [empresaId], references: [id])
  empresaId Int
  Maquina   Maquina[]
  hojaRecepcion HojaRecepcion[]
  presupuestos  Presupuesto[]

  @@map("fabrica_maquina")
}

model NombreMaquina {
  id        Int       @id @default(autoincrement())
  codigo    String    @unique
  nombre    String
  empresa   Empresa?  @relation(fields: [empresaId], references: [id])
  empresaId Int
  Maquina   Maquina[]
  hojaRecepcion HojaRecepcion[]
  presupuestos  Presupuesto[]

  @@map("nombre_maquina")
}

model MarcaMotor {
  id        Int       @id @default(autoincrement())
  codigo    String    @unique
  marca     String
  empresa   Empresa?  @relation(fields: [empresaId], references: [id])
  empresaId Int
  Maquina   Maquina[]

  @@map("marca_motor")
}

model MarcaFabricaSistemaInyeccion {
  id        Int       @id @default(autoincrement())
  codigo    String    @unique
  marca     String
  empresa   Empresa?  @relation(fields: [empresaId], references: [id])
  empresaId Int
  Maquina   Maquina[]
  hojaRecepcion HojaRecepcion[]
  presupuestos  Presupuesto[]

  @@map("marca_fabrica_sistema_inyeccion")
}

model DescripcionBombaInyeccion {
  id          Int       @id @default(autoincrement())
  codigo      String    @unique
  descripcion String
  empresa     Empresa?  @relation(fields: [empresaId], references: [id])
  empresaId   Int
  Maquina     Maquina[]

  @@map("descripcion_bomba_inyeccion")
}

model MarcaFabricaInyector {
  id        Int       @id @default(autoincrement())
  codigo    String    @unique
  marca     String
  empresa   Empresa?  @relation(fields: [empresaId], references: [id])
  empresaId Int
  Maquina   Maquina[]

  @@map("marca_fabrica_inyector")
}

model DescripcionInyector {
  id          Int       @id @default(autoincrement())
  codigo      String    @unique
  descripcion String
  empresa     Empresa?  @relation(fields: [empresaId], references: [id])
  empresaId   Int
  Maquina     Maquina[]

  @@map("descripcion_inyector")
}

model MaquinaProcedencia {
  id Int @id @default(autoincrement())

  @@map("maquina_procedencia")
}

model Maquina {
  id                             Int                           @id @default(autoincrement())
  codigo                         String?                       @unique
  fabricaMaquina                 FabricaMaquina?               @relation(fields: [fabricaMaquinaId], references: [id])
  fabricaMaquinaId               Int
  modeloMaquina                  ModeloMaquina?                @relation(fields: [modeloMaquinaId], references: [id])
  modeloMaquinaId                Int
  nombreMaquina                  NombreMaquina?                @relation(fields: [nombreMaquinaId], references: [id])
  nombreMaquinaId                Int
  procedencia                    Pais?                         @relation(name: "maquina", fields: [paisId], references: [id])
  paisId                         Int
  codigoOriginal                 String
  modeloMotor                    String
  marcaMotor                     MarcaMotor?                   @relation(fields: [marcaMotorId], references: [id])
  marcaMotorId                   Int
  procedenciaMotor               Pais?                         @relation(name: "motorPais", fields: [motorPaisId], references: [id])
  motorPaisId                    Int
  numeroCilindros                Int
  codigoFabricaBombaInyeccion    String
  tipoBombaInyeccion             String
  marcaFabricaSistemaInyeccion   MarcaFabricaSistemaInyeccion? @relation(fields: [marcaFabricaSistemaInyeccionId], references: [id])
  marcaFabricaSistemaInyeccionId Int
  descripcionBombaInyeccion      DescripcionBombaInyeccion?    @relation(fields: [descripcionBombaInyeccionId], references: [id])
  descripcionBombaInyeccionId    Int
  procedenciaBombaInyeccion      Pais?                         @relation(name: "bombaInyeccionPais", fields: [bombaInyeccionPaisId], references: [id])
  bombaInyeccionPaisId           Int
  codigoOriginalBombaInyeccion   String
  codigoFabricaInyector          String
  tipoFabricaInyector            String
  marcaFabricaInyector           MarcaFabricaInyector?         @relation(fields: [marcaFabricaInyectorId], references: [id])
  marcaFabricaInyectorId         Int
  descripcionInyector            DescripcionInyector?          @relation(fields: [descripcionInyectorId], references: [id])
  descripcionInyectorId          Int
  procedenciaInyector            Pais?                         @relation(name: "inyectorPais", fields: [inyectorPaisId], references: [id])
  inyectorPaisId                 Int
  codigoOriginalInyector         String
  codigoTobera                   String
  tipoTobera                     String
  empresa                        Empresa?                      @relation(fields: [empresaId], references: [id])
  empresaId                      Int
  Cotizacion                     Cotizacion[]
  guiaRemisionServicios GuiaRemisionServicios[]
  facturaServicios      FacturaServicios[]

  @@map("maquina")
}

model Material {
  id                                Int                        @id @default(autoincrement())
  codigo                            String?                    @unique
  correlativo                       String?                    @unique
  familia                           Familia?                   @relation(fields: [familiaId], references: [id])
  familiaId                         Int
  subfamilia                        SubFamilia?                @relation(fields: [subfamiliaId], references: [id])
  subfamiliaId                      Int
  denominacion                      String
  codigoFabricante                  String?
  tipoFabricante                    String?
  nombreInterno                     String? //Nuevo
  nombreComercial                   String? //Nuevo
  marca                             String? //Nuevo
  materialReemplazo                 Json?
  materialSimilitud                 Json?
  materialEquivalencia              Json?
  aplicacionDeMaquina               Json?
  caracteristicaToMaterial          CaracteristicaToMaterial[]
  empresa                           Empresa?                   @relation(fields: [empresaId], references: [id])
  empresaId                         Int
  stock                             Int?                       @default(0)
  codigoMotorOriginal               String?
  codigoBombaInyeccion              String?
  cotizacionToMaterial              CotizacionToMaterial[]
  // Cotizacion               Cotizacion?                @relation(fields: [cotizacionId], references: [id])
  // cotizacionId             Int?
  aprovacionCotizacionToMaterial    AprovacionCotizacionToMaterial[]
  aprovacionPedidoToMaterial        AprovacionPedidoToMaterial[]
  ventaUnidad                       Decimal?  @default(0) @db.Decimal(12, 2)
  hojasRecepcion                    HojaRecepcionToMateriales[]
  presupuestoRepuesto               PresupuestoToRepuesto[]
  presupuestoMaterial               PresupuestoToMaterial[]
  ordenTrabajoRepuesto              OrdenTrabajoToRepuesto[]
  ordenTrabajoMaterial              OrdenTrabajoToMaterial[]
  guiaRemisionServicio              GuiaRemisionServicioToMaterial[]
  facturaServicio                   FacturaServicioToMaterial[]
  
  @@map("material")
}

model CaracteristicaToMaterial {
  id               Int             @id @default(autoincrement())
  isChecked        Boolean
  valor            String?
  material         Material?       @relation(fields: [materialId], references: [id], onDelete: Cascade)
  materialId       Int
  caracteristica   Caracteristica? @relation(fields: [caracteristicaId], references: [id], onDelete: Cascade)
  caracteristicaId Int

  @@map("caracteristica_to_material")
}

// VENTA MOSTRADOR

model Cotizacion {
  id                     Int                   @id @default(autoincrement())
  number                 String?               @unique
  fechaCotizacion        DateTime              @default(now())
  fechaValidez           DateTime              @default(now())
  diasValidez            Int
  referencia             String?
  nota                   String?
  maquina                String?
  estadoDelDocumento     String?
  materiales             CotizacionToMaterial[]
  moneda                 String?
  subtotal               Decimal               @default(0) @db.Decimal(12, 2)
  descuento              Decimal               @default(0) @db.Decimal(12, 2)
  subtotalValorNeto      Decimal               @default(0) @db.Decimal(12, 2)
  igv                    Decimal               @default(0) @db.Decimal(12, 2)
  totalSoles             Decimal               @default(0) @db.Decimal(12, 2)
  formaPagoContado       FormaDePagoContado?   @relation(fields: [formaPagoContadoId], references: [id])
  formaPagoContadoId     Int?
  formaPagoCredito       FormaDePagoCredito?   @relation(fields: [formaPagoCreditoId], references: [id])
  formaPagoCreditoId     Int?
  tipoDeCambio           TipoDeCambio?         @relation(fields: [tipoDeCambioId], references: [id])
  tipoDeCambioId         Int?
  cliente                Cliente?              @relation(fields: [clienteId], references: [id])
  clienteId              Int?
  vendedor               Vendedor?             @relation(fields: [vendedorId], references: [id])
  vendedorId             Int?
  personal               Personal?             @relation(fields: [personalId], references: [id])
  personalId             Int?
  empresa                Empresa?              @relation(fields: [empresaId], references: [id])
  empresaId              Int
  sucursal               Sucursal?             @relation(fields: [sucursalId], references: [id])
  sucursalId             Int
  Maquina                Maquina?              @relation(fields: [maquinaId], references: [id])
  maquinaId              Int?
  // aprovacionCotizacion   AprovacionCotizacion? @relation(fields: [aprovacionCotizacionId], references: [id])
  // aprovacionCotizacionId Int?
  // aprovacionCotizaciones AprovacionCotizacion[]
  aprovacionesCotizaciones CotizacionToAprovacionCotizacion[]

  @@map("cotizacion")
}

model CotizacionToMaterial {
  id               Int             @id @default(autoincrement())
  cantidadMateriales         Int
  material         Material?       @relation(fields: [materialId], references: [id], onDelete: Cascade)
  materialId       Int
  cotizacion       Cotizacion?     @relation(fields: [cotizacionId], references: [id], onDelete: Cascade)
  cotizacionId     Int

  @@map("cotizacion_to_material")
}

model CotizacionToAprovacionCotizacion {
  id                        Int                       @id @default(autoincrement())
  cotizacion                Cotizacion?               @relation(fields: [cotizacionId], references: [id], onDelete: Cascade)     
  cotizacionId              Int
  aprovacionCotizacion      AprovacionCotizacion?     @relation(fields: [aprovacionCotizacionId], references: [id], onDelete: Cascade)     
  aprovacionCotizacionId    Int

  @@map("cotizacion_to_aprovacion_cotizacion")
}

model AprovacionCotizacion {
  id                 Int               @id @default(autoincrement())
  number             String?           @unique
  subtotal           Decimal           @default(0) @db.Decimal(12, 2)
  descuento          Decimal           @default(0) @db.Decimal(12, 2)
  subtotalValorNeto  Decimal           @default(0) @db.Decimal(12, 2)
  igv                Decimal           @default(0) @db.Decimal(12, 2)
  totalSoles         Decimal           @default(0) @db.Decimal(12, 2)
  fechaAprobacion    DateTime          @default(now())
  estadoDelDocumento String?
  cotizaciones       CotizacionToAprovacionCotizacion[]
  aprovacionesPedidos AprovacionCotizacionToAprovacionPedido[]
  moneda             String?
  maquina            String?
  // AprovacionPedido   AprovacionPedido? @relation(fields: [aprovacionPedidoId], references: [id])
  // aprovacionPedidoId Int?
  materiales         AprovacionCotizacionToMaterial[]
  cliente            Cliente?          @relation(fields: [clienteId], references: [id])
  clienteId          Int?
  empresa            Empresa?          @relation(fields: [empresaId], references: [id])
  empresaId          Int
  sucursal               Sucursal?             @relation(fields: [sucursalId], references: [id])
  sucursalId             Int


  @@map("aprovacion_cotizacion")
}

model AprovacionCotizacionToMaterial {
  id                      Int                     @id @default(autoincrement())
  cantidad                Int
  material                Material?               @relation(fields: [materialId], references: [id], onDelete: Cascade)
  materialId              Int
  aprovacionCotizacion    AprovacionCotizacion?   @relation(fields: [aprovacionCotizacionId], references: [id], onDelete: Cascade)
  aprovacionCotizacionId  Int

  @@map("aprovacion_cotizacion_to_material")
}

model AprovacionCotizacionToAprovacionPedido {
  id                        Int                       @id @default(autoincrement())
  aprovacionCotizacion      AprovacionCotizacion?     @relation(fields: [aprovacionCotizacionId], references: [id], onDelete: Cascade)     
  aprovacionCotizacionId    Int
  aprovacionPedido          AprovacionPedido?         @relation(fields: [aprovacionPedidoId], references: [id], onDelete: Cascade)
  aprovacionPedidoId        Int

  @@map("aprovacion_cotizacion_to_aprovacion_pedido")
}

model AprovacionPedido {
  id                   Int                    @id @default(autoincrement())
  number               String?                @unique
  subtotal             Decimal                @default(0) @db.Decimal(12, 2)
  descuento            Decimal                @default(0) @db.Decimal(12, 2)
  subtotalValorNeto    Decimal                @default(0) @db.Decimal(12, 2)
  igv                  Decimal                @default(0) @db.Decimal(12, 2)
  totalSoles           Decimal                @default(0) @db.Decimal(12, 2)
  fechaAprobacion      DateTime               @default(now())
  aprovacionCotizacion AprovacionCotizacionToAprovacionPedido[]
  moneda               String?
  maquina              String?
  // guiasDeRemision      GuiaDeRemision[]
  guiaDeRemision       GuiaDeRemision?
  estado               String?
  materiales           AprovacionPedidoToMaterial[]
  empresa              Empresa?               @relation(fields: [empresaId], references: [id])
  empresaId            Int
  sucursal             Sucursal?             @relation(fields: [sucursalId], references: [id])
  sucursalId           Int
  cliente              Cliente?          @relation(fields: [clienteId], references: [id])
  clienteId            Int?


  @@map("aprovacion_pedido")
}

model AprovacionPedidoToMaterial {
  id                      Int                     @id @default(autoincrement())
  cantidad                Int
  material                Material?               @relation(fields: [materialId], references: [id], onDelete: Cascade)
  materialId              Int
  aprovacionPedido        AprovacionPedido?       @relation(fields: [aprovacionPedidonId], references: [id], onDelete: Cascade)
  aprovacionPedidonId     Int

  @@map("aprovacion_pedido_to_material")
}

model GuiaDeRemision {
  id                   Int                 @id @default(autoincrement())
  tipoDeGuia           String?
  NumeroGuiaDeRemision String?
  serie                String?
  fechaDeCotizacion    DateTime            @default(now())
  fechaDeValidez       DateTime            @default(now())
  diasDeValidez        Int
  moneda               String?
  estado               String?
  numeroDeOrden        String?
  puntoDePartida       String?
  puntoDeLlegada       String?
  motivoDeTraslado     MotivoTrasladoGuiaRemision? @relation(fields: [motivoDeTrasladoId], references: [id])
  motivoDeTrasladoId   Int?
  referencia           String?
  nota                 String?
  aprovacionPedido     AprovacionPedido?  @relation(fields:[aprovacionPedidoId], references: [id])
  aprovacionPedidoId   Int?               @unique
  // formaPagoContado     FormaDePagoContado? @relation(fields: [formaPagoContadoId], references: [id])
  // formaPagoContadoId   Int?
  // formaPagoCredito     FormaDePagoCredito? @relation(fields: [formaPagoCreditoId], references: [id])
  // formaPagoCreditoId   Int?
  // tipoDeCambio         TipoDeCambio?       @relation(fields: [tipoDeCambioId], references: [id])
  // tipoDeCambioId       Int?
  cliente              Cliente?            @relation(fields: [clienteId], references: [id])
  clienteId            Int?
  maquina              String
  vendedor             Vendedor?           @relation(fields: [vendedorId], references: [id])
  vendedorId           Int?
  personal             Personal?           @relation(fields: [personalId], references: [id])
  personalId           Int?
  empresa              Empresa?            @relation(fields: [empresaId], references: [id])
  empresaId            Int
  sucursal             Sucursal?           @relation(fields: [sucursalId], references: [id])
  sucursalId           Int
  agencia              AgenciaTransporte?  @relation(fields: [agenciaId], references: [id])
  agenciaId            Int?
  vehiculo             Vehiculo?           @relation(fields: [vehiculoId], references: [id])
  vehiculoId           Int?
  conductor            Chofer?             @relation(fields: [choferId], references: [id])
  choferId             Int?
  subtotal             Decimal             @default(0) @db.Decimal(12, 2)
  descuento            Decimal             @default(0) @db.Decimal(12, 2)
  subtotalValorNeto    Decimal             @default(0) @db.Decimal(12, 2)
  igv                  Decimal             @default(0) @db.Decimal(12, 2)
  totalSoles           Decimal             @default(0) @db.Decimal(12, 2)
  factura              Factura?

  @@map("guia_de_remision")
}

model Factura {
  id                 Int                 @id @default(autoincrement())
  numeroDeFactura    String?             @unique
  tipoDeDocumento    DocumentoContable?  @relation(fields: [tipoDeDocumentoId], references: [id])
  tipoDeDocumentoId  Int?
  serie              String?
  fechaDeFactura     DateTime
  fechaDeValidez     DateTime
  diasDeValidez      Int
  moneda             String?
  formaPagoContado   FormaDePagoContado? @relation(fields: [formaPagoContadoId], references: [id])
  formaPagoContadoId Int?
  formaPagoCredito   FormaDePagoCredito? @relation(fields: [formaPagoCreditoId], references: [id])
  formaPagoCreditoId Int?
  tipoDeCambio       TipoDeCambio?       @relation(fields: [tipoDeCambioId], references: [id])
  tipoDeCambioId     Int?
  estado             String?
  GuiaDeRemision     GuiaDeRemision?     @relation(fields: [guiaDeRemisionId], references: [id])
  guiaDeRemisionId   Int?                @unique
  observaciones      String?
  cliente            Cliente?            @relation(fields: [clienteId], references: [id])
  clienteId          Int?
  maquina            String?
  vendedor           Vendedor?           @relation(fields: [vendedorId], references: [id])
  vendedorId         Int?
  personal           Personal?           @relation(fields: [personalId], references: [id])
  personalId         Int?
  ordenDeCompra      String?
  empresa            Empresa?            @relation(fields: [empresaId], references: [id])
  empresaId          Int
  sucursal           Sucursal?           @relation(fields: [sucursalId], references: [id])
  sucursalId         Int
  referencia         String?
  nota               String?
  subtotal           Decimal             @default(0) @db.Decimal(12, 2)
  descuento          Decimal             @default(0) @db.Decimal(12, 2)
  subtotalValorNeto  Decimal             @default(0) @db.Decimal(12, 2)
  igv                Decimal             @default(0) @db.Decimal(12, 2)
  totalSoles         Decimal             @default(0) @db.Decimal(12, 2)
  icbper             Decimal             @default(0) @db.Decimal(12, 2)
  haveIcbper         Boolean             @default(false)
  detraccion         Detraccion?         @relation(fields: [detraccionId], references: [id])
  detraccionId       Int?

  @@map("factura")
}

model ReporteVentas {
  id                Int                  @id @default(autoincrement())
  nroReporte        Int
  fechaInicio       DateTime             @default(now())
  fechaFin          DateTime             @default(now())
  urlPdf            String
  empresa           Empresa?             @relation(fields: [empresaId] , references: [id])
  empresaId         Int

  @@map("reporte_ventas")
}

model ReporteRecordClientes {
  id                Int                  @id @default(autoincrement())
  nroReporte        Int
  fechaInicio       DateTime             @default(now())
  fechaFin          DateTime             @default(now())
  urlPdf            String
  empresa           Empresa?             @relation(fields: [empresaId] , references: [id])
  empresaId         Int
  @@map("reporte_record_clientes")
}

model ReporteRecordProveedores {
  id                Int                  @id @default(autoincrement())
  nroReporte        Int
  fechaInicio       DateTime             @default(now())
  fechaFin          DateTime             @default(now())
  urlPdf            String
  empresa           Empresa?             @relation(fields: [empresaId] , references: [id])
  empresaId         Int

  @@map("reporte_record_proveedores")
}

model ReporteStockMinimo {
  id                Int                  @id @default(autoincrement())
  nroReporte        Int
  fecha             DateTime             @default(now())
  urlPdf            String
  empresa           Empresa?             @relation(fields: [empresaId] , references: [id])
  empresaId         Int

  @@map("reporte_stock_minimo")
}

model ReporteMensualVentas {
  id                Int                  @id @default(autoincrement())
  nroReporte        Int
  mes               String
  anio              String
  urlPdf            String
  empresa           Empresa?             @relation(fields: [empresaId] , references: [id])
  empresaId         Int

  @@map("reporte_mensual_ventas")
}

// Venta-servicio

model HojaRecepcion {
  id                Int                  @id @default(autoincrement())
  codigo            String?              @unique
  denominacion      String               
  tipoReparacion    String
  cliente           Cliente?              @relation(fields: [clienteId], references: [id])
  clienteId         Int?
  fabricaMaquina    FabricaMaquina?       @relation(fields: [fabricaMaquinaId], references: [id])
  fabricaMaquinaId  Int
  modeloMaquina     ModeloMaquina?        @relation(fields: [modeloMaquinaId], references: [id])
  modeloMaquinaId   Int
  nombreMaquina     NombreMaquina?        @relation(fields: [nombreMaquinaId], references: [id])
  nombreMaquinaId   Int
  procedencia       Pais?                 @relation(fields: [paisId], references: [id])
  paisId            Int
  codigoMotorOriginal String
  serieMotor        String
  serieChasis       String
  vendedor          Vendedor?             @relation(fields: [vendedorId], references: [id])
  vendedorId        Int?
  personal          Personal?             @relation(fields: [personalId], references: [id])
  personalId        Int?
  codigoBombaInyeccionOriginal  String
  codigoBombaInyeccionFabricante String
  tipoBombaInyeccionFabricante  String
  marcaFabricaSistemaInyeccion   MarcaFabricaSistemaInyeccion? @relation(fields: [marcaFabricaSistemaInyeccionId], references: [id])
  marcaFabricaSistemaInyeccionId Int
  codigoOriginalBombaInyeccion  String
  nombreBombaInyeccion    String
  serieBombaInyeccion     String
  codigoInyectorOriginal  String
  codigoInyectorFabricante  String
  tipoFabricanteInyector  String
  codigoOriginalInyector  String
  informacionCliente  String
  conclusiones        String
  bombaInyeccionJSON        Json?
  inyectorElectronicoJSON   Json?
  inyectorConvencionalJSON  Json?
  materiales  HojaRecepcionToMateriales[]
  servicios   HojaRecepcionToServicio[]
  presupuesto Presupuesto?
  empresa                Empresa?              @relation(fields: [empresaId], references: [id])
  empresaId              Int
  sucursal               Sucursal?             @relation(fields: [sucursalId], references: [id])
  sucursalId             Int

  @@map("hoja_recepcion")
}

model HojaRecepcionToMateriales {
  id                      Int             @id @default(autoincrement())
  material                Material?               @relation(fields: [materialId], references: [id], onDelete: Cascade)
  materialId              Int
  hojaRecepcion           HojaRecepcion?       @relation(fields: [hojaRecepcionId], references: [id], onDelete: Cascade)
  hojaRecepcionId         Int
  cantidad                Int
  diagnostico             String
  observaciones           String?

  @@map("hoja_recepcion_to_materiales")
}

model HojaRecepcionToServicio {
  id                      Int             @id @default(autoincrement())
  servicio                Servicio?               @relation(fields: [servicioId], references: [id], onDelete: Cascade)
  servicioId              Int
  hojaRecepcion           HojaRecepcion?       @relation(fields: [hojaRecepcionId], references: [id], onDelete: Cascade)
  hojaRecepcionId         Int

  @@map("hoja_recepcion_to_servicio")
}

model Presupuesto {
  id                      Int                   @id @default(autoincrement())
  codigo                  String?
  hojaRecepcion           HojaRecepcion?        @relation(fields: [hojaRecepcionId], references: [id])
  hojaRecepcionId         Int?                  @unique
  denominacion            String
  tipoReparacion          String
  cliente                 Cliente?              @relation(fields: [clienteId], references: [id])
  clienteId               Int?
  fabricaMaquina          FabricaMaquina?       @relation(fields: [fabricaMaquinaId], references: [id])
  fabricaMaquinaId        Int
  modeloMaquina           ModeloMaquina?        @relation(fields: [modeloMaquinaId], references: [id])
  modeloMaquinaId         Int
  nombreMaquina           NombreMaquina?        @relation(fields: [nombreMaquinaId], references: [id])
  nombreMaquinaId         Int
  procedencia             Pais?                 @relation(fields: [paisId], references: [id])
  paisId                  Int
  codigoMotorOriginal     String
  serieMotor              String
  serieChasis             String
  vendedor                Vendedor?             @relation(fields: [vendedorId], references: [id])
  vendedorId              Int?
  personal                Personal?             @relation(fields: [personalId], references: [id])
  personalId              Int?
  codigoBombaInyeccionOriginal  String
  codigoBombaInyeccionFabricante String
  tipoBombaInyeccionFabricante  String
  marcaFabricaSistemaInyeccion   MarcaFabricaSistemaInyeccion? @relation(fields: [marcaFabricaSistemaInyeccionId], references: [id])
  marcaFabricaSistemaInyeccionId Int
  codigoOriginalBombaInyeccion  String
  nombreBombaInyeccion    String
  serieBombaInyeccion     String
  codigoInyectorOriginal  String
  codigoInyectorFabricante  String
  tipoFabricanteInyector  String
  codigoOriginalInyector  String
  codigoInyectorOriginalOrden1  String
  codigoInyectorOriginalOrden2  String
  codigoInyectorOriginalOrden3  String
  fechaIngreso            DateTime              @default(now())
  horaIngreso             DateTime
  fechaSalida             DateTime              @default(now())
  horaSalida              DateTime
  estadoOrdenTrabajo      String?
  subtotalValorServicio   Decimal               @default(0) @db.Decimal(12, 2)
  subtotalRepuestos       Decimal               @default(0) @db.Decimal(12, 2)
  subtotalMateriales      Decimal               @default(0) @db.Decimal(12, 2)
  subtotalTrabajoTerceros  Decimal              @default(0) @db.Decimal(12, 2)
  descuento               Decimal               @default(0) @db.Decimal(12, 2)
  igv                     Decimal               @default(0) @db.Decimal(12, 2)
  totalPresupuesto        Decimal               @default(0) @db.Decimal(12, 2)
  servicios               PresupuestoToServicio[]
  repuestos               PresupuestoToRepuesto[]
  materiales              PresupuestoToMaterial[]
  trabajosTerceros        PresupuestoToTrabajoTerceros[]
  ordenesTrabajo          PresupuestoToOrdenTrabajo[]
  empresa                 Empresa?              @relation(fields: [empresaId], references: [id])
  empresaId               Int
  sucursal                Sucursal?             @relation(fields: [sucursalId], references: [id])
  sucursalId              Int
  

  @@map("presupuesto")
}

model PresupuestoToServicio {
  id                      Int                @id @default(autoincrement())
  servicio                Servicio?          @relation(fields: [servicioId], references: [id], onDelete: Cascade)
  servicioId              Int
  presupuesto             Presupuesto?       @relation(fields: [presupuestoId], references: [id], onDelete: Cascade)
  presupuestoId           Int
  diagnostico             String
  precio                  Decimal            @default(0) @db.Decimal(12, 2)
  comentarios             String?

  @@map("presupuesto_to_servicio")
}

model PresupuestoToRepuesto {
  id                      Int                @id @default(autoincrement())
  repuesto                Material?          @relation(fields: [repuestoId], references: [id], onDelete: Cascade)
  repuestoId              Int
  presupuesto             Presupuesto?       @relation(fields: [presupuestoId], references: [id], onDelete: Cascade)
  presupuestoId           Int
  cantidad                Int
  diagnostico             String
  precio                  Decimal            @default(0) @db.Decimal(12, 2)
  comentarios             String?

  @@map("presupuesto_to_repuesto")
}

model PresupuestoToMaterial {
  id                      Int                @id @default(autoincrement())
  material                Material?          @relation(fields: [materialId], references: [id], onDelete: Cascade)
  materialId              Int
  presupuesto             Presupuesto?       @relation(fields: [presupuestoId], references: [id], onDelete: Cascade)
  presupuestoId           Int
  cantidad                Int
  precio                  Decimal            @default(0) @db.Decimal(12, 2)
  comentarios             String?

  @@map("presupuesto_to_material")
}

model PresupuestoToTrabajoTerceros {
  id                      Int                @id @default(autoincrement())
  trabajoTercero          TrabajoTerceros?   @relation(fields: [trabajoTerceroId], references: [id], onDelete: Cascade)
  trabajoTerceroId        Int
  presupuesto             Presupuesto?       @relation(fields: [presupuestoId], references: [id], onDelete: Cascade)
  presupuestoId           Int
  precio                  Decimal            @default(0) @db.Decimal(12, 2)
  comentarios             String?

  @@map("presupuesto_to_trabajo_terceros")
}

model PresupuestoToOrdenTrabajo {
  id                      Int                @id @default(autoincrement())
  presupuesto             Presupuesto?       @relation(fields: [presupuestoId], references: [id], onDelete: Cascade)
  presupuestoId           Int
  ordenTrabajo            OrdenTrabajo?       @relation(fields: [ordenTrabajoId], references: [id], onDelete: Cascade)
  ordenTrabajoId          Int

  @@map("presupuesto_to_orden_trabajo")
}

model OrdenTrabajo{
  id                      Int                @id @default(autoincrement())
  codigo                  String?
  cliente                 Cliente?              @relation(fields: [clienteId], references: [id])
  clienteId               Int?
  subtotalValorServicio   Decimal               @default(0) @db.Decimal(12, 2)
  subtotalRepuestos       Decimal               @default(0) @db.Decimal(12, 2)
  subtotalMateriales      Decimal               @default(0) @db.Decimal(12, 2)
  subtotalTrabajoTerceros  Decimal              @default(0) @db.Decimal(12, 2)
  descuento               Decimal               @default(0) @db.Decimal(12, 2)
  igv                     Decimal               @default(0) @db.Decimal(12, 2)
  totalPresupuesto        Decimal               @default(0) @db.Decimal(12, 2)
  presupuestos            PresupuestoToOrdenTrabajo[]
  servicios               OrdenTrabajoToServicio[]
  repuestos               OrdenTrabajoToRepuesto[]
  materiales              OrdenTrabajoToMaterial[]
  trabajosTerceros        OrdenTrabajoToTrabajoTerceros[]
  guiaRemisionServicio    GuiaRemisionServicios?
  empresa                 Empresa?              @relation(fields: [empresaId], references: [id])
  empresaId               Int
  sucursal                Sucursal?             @relation(fields: [sucursalId], references: [id])
  sucursalId              Int

  @@map("orden_trabajo")
}

model OrdenTrabajoToServicio {
  id                      Int                @id @default(autoincrement())
  servicio                Servicio?          @relation(fields: [servicioId], references: [id], onDelete: Cascade)
  servicioId              Int
  ordenTrabajo            OrdenTrabajo?     @relation(fields: [ordenTrabajoId], references: [id], onDelete: Cascade)
  ordenTrabajoId          Int
  diagnostico             String?
  precio                  Decimal            @default(0) @db.Decimal(12, 2)
  comentarios             String?

  @@map("orden_trabajo_to_servicio")
}

model OrdenTrabajoToRepuesto {
  id                      Int                @id @default(autoincrement())
  repuesto                Material?          @relation(fields: [repuestoId], references: [id], onDelete: Cascade)
  repuestoId              Int
  ordenTrabajo            OrdenTrabajo?     @relation(fields: [ordenTrabajoId], references: [id], onDelete: Cascade)
  ordenTrabajoId          Int
  cantidad                Int
  diagnostico             String?
  precio                  Decimal            @default(0) @db.Decimal(12, 2)
  comentarios             String?

  @@map("orden_trabajo_to_repuesto")
}

model OrdenTrabajoToMaterial {
  id                      Int                @id @default(autoincrement())
  material                Material?          @relation(fields: [materialId], references: [id], onDelete: Cascade)
  materialId              Int
  ordenTrabajo            OrdenTrabajo?     @relation(fields: [ordenTrabajoId], references: [id], onDelete: Cascade)
  ordenTrabajoId          Int
  cantidad                Int
  precio                  Decimal            @default(0) @db.Decimal(12, 2)
  comentarios             String?

  @@map("orden_trabajo_to_material")
}

model OrdenTrabajoToTrabajoTerceros {
  id                      Int                @id @default(autoincrement())
  trabajoTercero          TrabajoTerceros?   @relation(fields: [trabajoTerceroId], references: [id], onDelete: Cascade)
  trabajoTerceroId        Int
  ordenTrabajo            OrdenTrabajo?     @relation(fields: [ordenTrabajoId], references: [id], onDelete: Cascade)
  ordenTrabajoId          Int
  precio                  Decimal            @default(0) @db.Decimal(12, 2)
  comentarios             String?

  @@map("orden_trabajo_to_trabajo_terceros")
}

model GuiaRemisionServicios {
  id                      Int                @id @default(autoincrement())
  codigo                  String?
  ordenTrabajo            OrdenTrabajo?      @relation(fields: [ordenTrabajoId], references: [id])
  ordenTrabajoId          Int?               @unique
  tipoGuia                String
  nroGuiaRemision         String
  fechaGuia               DateTime           @default(now())
  diasValidez             Int
  fechaValidez            DateTime           @default(now())
  moneda                  String
  formaPagoContado        FormaDePagoContado? @relation(fields: [formaPagoContadoId], references: [id])
  formaPagoContadoId      Int?
  formaPagoCredito        FormaDePagoCredito? @relation(fields: [formaPagoCreditoId], references: [id])
  formaPagoCreditoId      Int?
  tipoDeCambio            TipoDeCambio?       @relation(fields: [tipoDeCambioId], references: [id])
  tipoDeCambioId          Int?
  estado                  String?
  cliente                 Cliente?            @relation(fields: [clienteId], references: [id])
  clienteId               Int?
  vendedor                Vendedor?           @relation(fields: [vendedorId], references: [id])
  vendedorId              Int?
  personal                Personal?           @relation(fields: [personalId], references: [id])
  personalId              Int?
  Maquina                 Maquina?            @relation(fields: [maquinaId], references: [id])
  maquinaId               Int?
  nroOrdenCompra          String
  puntoPartida            String
  puntoLlegada            String
  motivoTraslada          String?
  agencia                 AgenciaTransporte?  @relation(fields: [agenciaId], references: [id])
  agenciaId               Int?
  vehiculo                Vehiculo?           @relation(fields: [vehiculoId], references: [id])
  vehiculoId              Int?
  chofer                  Chofer?             @relation(fields: [choferId], references: [id])
  choferId                Int?
  referencia              String?
  nota                    String?
  materiales              GuiaRemisionServicioToMaterial[]
  subtotal                Decimal             @default(0) @db.Decimal(12, 2)
  descuento               Decimal             @default(0) @db.Decimal(12, 2)
  subtotalValorNeto       Decimal             @default(0) @db.Decimal(12, 2)
  igv                     Decimal             @default(0) @db.Decimal(12, 2)
  totalSoles              Decimal             @default(0) @db.Decimal(12, 2)
  factura                 FacturaServicios?
  empresa                 Empresa?              @relation(fields: [empresaId], references: [id])
  empresaId               Int
  sucursal                Sucursal?             @relation(fields: [sucursalId], references: [id])
  sucursalId              Int
  

  @@map("guia_remision_servicios")
}

model GuiaRemisionServicioToMaterial {
  id                      Int                       @id @default(autoincrement())
  material                Material?                 @relation(fields: [materialId], references: [id])
  materialId              Int
  guiaRemisionServicio    GuiaRemisionServicios?    @relation(fields: [guiaRemisionServicioId], references: [id], onDelete: Cascade)
  guiaRemisionServicioId  Int
  cantidad                Int
  precio                  Decimal                    @default(0) @db.Decimal(12, 2)

  @@map("guia_remision_servicio_to_material")
}

model FacturaServicios {
  id                      Int                @id @default(autoincrement())
  codigo                  String?
  nroFactura              String?             @unique
  tipoDeDocumento         DocumentoContable?  @relation(fields: [tipoDeDocumentoId], references: [id])
  tipoDeDocumentoId       Int?
  guiaRemision            GuiaRemisionServicios?      @relation(fields: [guiaRemisionId], references: [id])
  guiaRemisionId          Int?               @unique
  serie                   String
  fechaFactura            DateTime           @default(now())
  diasValidez             Int
  fechaValidez            DateTime           @default(now())
  moneda                  String
  formaPagoContado        FormaDePagoContado? @relation(fields: [formaPagoContadoId], references: [id])
  formaPagoContadoId      Int?
  formaPagoCredito        FormaDePagoCredito? @relation(fields: [formaPagoCreditoId], references: [id])
  formaPagoCreditoId      Int?
  tipoDeCambio            TipoDeCambio?       @relation(fields: [tipoDeCambioId], references: [id])
  tipoDeCambioId          Int?
  estado                  String?
  cliente                 Cliente?            @relation(fields: [clienteId], references: [id])
  clienteId               Int?
  vendedor                Vendedor?           @relation(fields: [vendedorId], references: [id])
  vendedorId              Int?
  personal                Personal?           @relation(fields: [personalId], references: [id])
  personalId              Int?
  Maquina                 Maquina?            @relation(fields: [maquinaId], references: [id])
  maquinaId               Int?
  nroOrdenCompra          String
  referencia              String?
  nota                    String?
  tipoFactura             String  
  materiales              FacturaServicioToMaterial[]
  subtotalMateriales      Decimal             @default(0) @db.Decimal(12, 2)
  descuentoMateriales     Decimal             @default(0) @db.Decimal(12, 2)
  subtotalValorNetoMateriales      Decimal   @default(0) @db.Decimal(12, 2)
  igvMateriales                    Decimal   @default(0) @db.Decimal(12, 2)
  detraccionMaterial      Detraccion?       @relation(name: "detraccionMaterial", fields: [detraccionMaterialId], references: [id])
  detraccionMaterialId    Int?
  icbper                  Boolean
  totalSolesMateriales             Decimal   @default(0) @db.Decimal(12, 2)
  servicios               FacturaServicioToServicio[]
  subtotalServicios                Decimal             @default(0) @db.Decimal(12, 2)
  descuentoServicios               Decimal             @default(0) @db.Decimal(12, 2)
  subtotalValorNetoServicios       Decimal             @default(0) @db.Decimal(12, 2)
  igvServicios                     Decimal             @default(0) @db.Decimal(12, 2)
  totalSolesServicios              Decimal             @default(0) @db.Decimal(12, 2)
  detraccionServicios      Detraccion?       @relation(name: "detraccionServicio", fields: [detraccionServiciosId], references: [id])
  detraccionServiciosId    Int?
  empresa                  Empresa?              @relation(fields: [empresaId], references: [id])
  empresaId                Int
  sucursal                 Sucursal?             @relation(fields: [sucursalId], references: [id])
  sucursalId               Int

  @@map("factura_servicios")
}

model FacturaServicioToMaterial {
  id                      Int                       @id @default(autoincrement())
  material                Material?                 @relation(fields: [materialId], references: [id])
  materialId              Int
  facturaServicio         FacturaServicios?         @relation(fields: [facturaServicioId], references: [id], onDelete: Cascade)
  facturaServicioId       Int
  cantidad                Int
  precio                  Decimal                   @default(0) @db.Decimal(12, 2)

  @@map("factura_servicio_to_material")
}

model FacturaServicioToServicio {
  id                      Int                    @id @default(autoincrement())
  servicio                Servicio?              @relation(fields: [servicioId], references: [id])
  servicioId              Int
  facturaServicios        FacturaServicios?      @relation(fields: [facturaServiciosId], references: [id], onDelete: Cascade)
  facturaServiciosId      Int
  precio                  Decimal                @default(0) @db.Decimal(12, 2)

  @@map("factura_servicio_to_servicio")
}

enum EstadoEnum {
  Activo
  Inactivo
}

enum TipoDocumentoEnum {
  DNI
  RUC
}

enum RolesEnum {
  Administrador
  Vendedor
  Tecnico
}
